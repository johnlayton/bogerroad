server:
  port: 8080

grpc:
  enableReflection: true
  port: 6565

#  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://mariadb:3306/bulk-application
#    username: dbuser
#    password: dbpass

#      hibernate.dialect: org.hibernate.dialect.MariaDB103Dialect
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgresql:5432/bulk_stream
    username: dbuser
    password: dbpass
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQL94Dialect
  rabbitmq:
    username: guest
    password: guest
    addresses: amqp://rabbitmq:5672
    template:
      exchange: bulk-message-exchange
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      bootstrap-servers: kafka:9092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.bogerroad.EmailMessageSerializer
      properties:
        spring.json.trusted.packages: "org.bogerroad"
    producer:
      bootstrap-servers: kafka:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.bogerroad.EmailMessageSerializer
    template:
      default-topic: topic1


#      value-serializer: com.github.thake.kafka.avro4k.serializer.KafkaAvro4kSerializer
#      value-deserializer: com.github.thake.kafka.avro4k.serializer.KafkaAvro4kDeserializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
